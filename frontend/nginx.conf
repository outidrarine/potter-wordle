user nobody nogroup;
# number of cpu cores
worker_processes 2;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	# worker_connections = ram / worker_processes
	worker_connections 1024;
}

http {

	# open file cache
	open_file_cache max=1000 inactive=30s;
	open_file_cache_valid 60s;
	open_file_cache_min_uses 2;
	open_file_cache_errors off;

	# maps for ips
	map $http_cf_connecting_ip $ip_anonym1 {
		default 0.0.0;
		"~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" $ip;
		"~(?P<ip>[^:]+:[^:]+):" $ip;
	}

	map $http_cf_connecting_ip $ip_anonym2 {
		default .0;
		"~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
		"~(?P<ip>[^:]+:[^:]+):" ::;
	}

	map $ip_anonym1$ip_anonym2 $ip_anonymized {
		default 0.0.0.0;
		"~(?P<ip>.*)" $ip;
	}

	log_format anonymized '$ip_anonymized - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent"';

	access_log /var/log/nginx/access.log anonymized;
	error_log /var/log/nginx/error.log crit;

	upstream backend {
		server loldle-api:8080;
	}

	server {
		listen 0.0.0.0:8241;
		server_tokens off;

		location /status {
			stub_status on;
			access_log off;
		}
	}

	# redirect http to https
	server {
		listen 0.0.0.0:80;
		server_name www.infiniteloldle.com;

		return 301 https://$host$request_uri;
	}

	server {
		server_tokens off;

		location / {
			return 301 https://$host$request_uri;
		}
	}

	server {
		# 10 * 4000 = 40 000 ssl sessions can be kept it memory for a day
		

		listen 0.0.0.0:443;

	

		server_name www.infiniteloldle.com;

		# allow connections from cloudflare ips
		allow 103.21.244.0/22;
		allow 103.22.200.0/22;
		allow 103.31.4.0/22;
		allow 104.16.0.0/13;
		allow 104.24.0.0/14;
		allow 108.162.192.0/18;
		allow 131.0.72.0/22;
		allow 141.101.64.0/18;
		allow 162.158.0.0/15;
		allow 172.64.0.0/13;
		allow 173.245.48.0/20;
		allow 188.114.96.0/20;
		allow 190.93.240.0/20;
		allow 197.234.240.0/22;
		allow 198.41.128.0/17;

		allow 2400:cb00::/32;
		allow 2606:4700::/32;
		allow 2803:f800::/32;
		allow 2405:b500::/32;
		allow 2405:8100::/32;
		allow 2a06:98c0::/29;
		allow 2c0f:f248::/32;

		# and deny rest
		#deny all;

		# Gzip configuration
		gzip on;
		gzip_types text/plain text/css text/html application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
		gzip_min_length 100;
		gzip_proxied expired no-cache no-store private auth;
		gzip_http_version 1.1;
		gzip_disable "MSIE [1-6]\.";
		gzip_vary on;
		gzip_comp_level 4;

		server_tokens off;

		location /status {
			stub_status on;
			access_log off;
		}

		# 365 days old fonts and icons
		location ~* ^\.(otf|ttf|woff|woff2|ico)$ {
			add_header Surrogate-Control "public, max-age=31536000";
			add_header Cache-Control "public, max-age=31536000";
		}

		# 365 days old images
		location ~* ^\.(jpg|png|svg|webp)$ {
			add_header Surrogate-Control "public, max-age=31536000";
			add_header Cache-Control "public, max-age=31536000";
		}

		# 1 day old css js html files
		location ~* ^\.(css|js|html|xml)$ {
			add_header Surrogate-Control "public, max-age=86400";
			add_header Cache-Control "public, max-age=86400";
		}

		location /sitemap.xml {
			root /usr/share/nginx/html;
		}

		location /robots.txt {
			root /usr/share/nginx/html;
		}

		location /api {
			proxy_pass http://backend;

			proxy_set_header X-Real-IP $http_cf_connecting_ip;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;
		}

		location / {
			include /etc/nginx/mime.types;

			root /usr/share/nginx/html;
			index index.html;
			try_files $uri $uri/ /index.html;
		}
	}
}
